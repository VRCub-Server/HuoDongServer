{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/user-avatar.tsx"],"sourcesContent":["import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport type { User } from \"@/lib/types\";\n\ninterface UserAvatarProps {\n  user: Pick<User, 'username' | 'avatarUrl'>;\n  className?: string;\n}\n\nexport default function UserAvatar({ user, className }: UserAvatarProps) {\n  const fallbackText = user.username ? user.username.substring(0, 2).toUpperCase() : \"??\";\n  // Using picsum.photos as a more reliable placeholder than avatar.vercel.sh for general avatars\n  const placeholderSrc = user.avatarUrl || `https://picsum.photos/seed/${user.username}/40/40`;\n\n  return (\n    <Avatar className={className}>\n      <AvatarImage src={placeholderSrc} alt={user.username} data-ai-hint=\"profile avatar\" />\n      <AvatarFallback>{fallbackText}</AvatarFallback>\n    </Avatar>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAQe,SAAS,WAAW,EAAE,IAAI,EAAE,SAAS,EAAmB;IACrE,MAAM,eAAe,KAAK,QAAQ,GAAG,KAAK,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW,KAAK;IACnF,+FAA+F;IAC/F,MAAM,iBAAiB,KAAK,SAAS,IAAI,CAAC,2BAA2B,EAAE,KAAK,QAAQ,CAAC,MAAM,CAAC;IAE5F,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,WAAW;;0BACjB,8OAAC,kIAAA,CAAA,cAAW;gBAAC,KAAK;gBAAgB,KAAK,KAAK,QAAQ;gBAAE,gBAAa;;;;;;0BACnE,8OAAC,kIAAA,CAAA,iBAAc;0BAAE;;;;;;;;;;;;AAGvB","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import type { Event, User, Participant, EventStatus } from './types';\nimport { addDays, isPast, isFuture, isEqual, parseISO } from 'date-fns';\n\n// Mock Users\nconst mockUsers: User[] = [\n  { id: 'user1', username: 'Steve', avatarUrl: 'https://picsum.photos/100/100?random=1', joinedEventIds: ['event1', 'event2'] },\n  { id: 'user2', username: 'Alex', avatarUrl: 'https://picsum.photos/100/100?random=2', joinedEventIds: ['event2'] },\n  { id: 'user3', username: 'Notch', avatarUrl: 'https://picsum.photos/100/100?random=3', joinedEventIds: [] },\n];\n\n// Mock Events\nconst mockEvents: Event[] = [\n  {\n    id: 'event1',\n    name: 'Survival Games Championship',\n    date: addDays(new Date(), 7).toISOString(), // Upcoming\n    description: `\n### Welcome to the Annual Survival Games!\nProve your mettle in a fight to be the last one standing.\n**Rules:**\n- No cheating\n- Alliances are temporary\n- Have fun!\n**Prizes:**\n- 1st Place: Diamond Trophy\n- 2nd Place: Gold Ingots\n- 3rd Place: Iron Tools\n`,\n    participantLimit: 24,\n    participants: [\n      { ...mockUsers[0], isCheckedIn: false },\n    ],\n    cdKey: 'SURVIVAL2024',\n    imageUrl: 'https://picsum.photos/600/400?random=10',\n    organizerId: 'adminUser',\n  },\n  {\n    id: 'event2',\n    name: 'Creative Build-Off',\n    date: new Date().toISOString(), // Current\n    description: `\n## Show Us Your Building Skills!\nTheme: **Medieval Castles**\nBuild the most impressive castle within the time limit.\nJudged on:\n- Creativity\n- Detail\n- Scale\n`,\n    participantLimit: 50,\n    participants: [\n      { ...mockUsers[0], isCheckedIn: true },\n      { ...mockUsers[1], isCheckedIn: false },\n    ],\n    cdKey: 'BUILDMC2024',\n    imageUrl: 'https://picsum.photos/600/400?random=11',\n    organizerId: 'adminUser',\n  },\n  {\n    id: 'event3',\n    name: 'Parkour Challenge',\n    date: addDays(new Date(), -14).toISOString(), // Past\n    description: 'Test your agility in our toughest parkour map yet. Rewards for completion!',\n    participants: [],\n    cdKey: 'PARKOURX',\n    imageUrl: 'https://picsum.photos/600/400?random=12',\n    organizerId: 'adminUser',\n  },\n  {\n    id: 'event4',\n    name: 'Redstone Contraption Fair',\n    date: addDays(new Date(), 30).toISOString(), // Upcoming\n    description: 'Showcase your most ingenious redstone inventions. Innovation is key!',\n    participantLimit: 10,\n    participants: [],\n    cdKey: 'REDSTONEFAI',\n    imageUrl: 'https://picsum.photos/600/400?random=13',\n    organizerId: 'adminUser',\n  },\n];\n\n// --- Event Functions ---\nexport async function getEvents(): Promise<Event[]> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  return JSON.parse(JSON.stringify(mockEvents)); // Deep copy to prevent mutation issues\n}\n\nexport async function getEventById(id: string): Promise<Event | undefined> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === id);\n  return event ? JSON.parse(JSON.stringify(event)) : undefined;\n}\n\nexport function getEventStatus(eventDate: string): EventStatus {\n  const date = parseISO(eventDate);\n  const today = new Date();\n  \n  // Consider an event \"current\" if it's today.\n  // For simplicity, we'll define \"today\" as the same calendar date.\n  // A more robust solution might involve start and end times.\n  if (isEqual(new Date(date.toDateString()), new Date(today.toDateString()))) {\n    return 'current';\n  }\n  if (isPast(date) && !isEqual(new Date(date.toDateString()), new Date(today.toDateString()))) {\n    return 'past';\n  }\n  if (isFuture(date)) {\n    return 'upcoming';\n  }\n  return 'current'; // Fallback, though should be covered\n}\n\nexport async function createEvent(eventData: Omit<Event, 'id' | 'participants' | 'organizerId'>, organizerId: string): Promise<Event> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  const newEvent: Event = {\n    ...eventData,\n    id: `event${mockEvents.length + 1}`,\n    participants: [],\n    organizerId,\n  };\n  mockEvents.push(newEvent);\n  return JSON.parse(JSON.stringify(newEvent));\n}\n\nexport async function joinEvent(userId: string, eventId: string, cdKey: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === eventId);\n  const user = mockUsers.find(u => u.id === userId);\n\n  if (!event) return { success: false, message: 'Event not found.' };\n  if (!user) return { success: false, message: 'User not found.' };\n  if (event.cdKey !== cdKey) return { success: false, message: 'Invalid CD-Key.' };\n  if (event.participantLimit && event.participants.length >= event.participantLimit) {\n    return { success: false, message: 'Event is full.' };\n  }\n  if (event.participants.some(p => p.id === userId)) {\n    return { success: false, message: 'Already joined this event.', event };\n  }\n\n  const participant: Participant = { ...user, isCheckedIn: false };\n  event.participants.push(participant);\n  user.joinedEventIds = [...(user.joinedEventIds || []), eventId];\n  \n  return { success: true, message: 'Successfully joined event!', event: JSON.parse(JSON.stringify(event)) };\n}\n\nexport async function leaveEvent(userId: string, eventId: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === eventId);\n  const user = mockUsers.find(u => u.id === userId);\n\n  if (!event) return { success: false, message: 'Event not found.' };\n  if (!user) return { success: false, message: 'User not found.' };\n\n  const participantIndex = event.participants.findIndex(p => p.id === userId);\n  if (participantIndex === -1) {\n    return { success: false, message: 'Not currently joined in this event.' };\n  }\n\n  event.participants.splice(participantIndex, 1);\n  user.joinedEventIds = (user.joinedEventIds || []).filter(id => id !== eventId);\n\n  return { success: true, message: 'Successfully left event.', event: JSON.parse(JSON.stringify(event)) };\n}\n\nexport async function checkInUser(userId: string, eventId: string): Promise<{ success: boolean, message: string }> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === eventId);\n  if (!event) return { success: false, message: 'Event not found.' };\n\n  const participant = event.participants.find(p => p.id === userId);\n  if (!participant) return { success: false, message: 'You are not registered for this event.' };\n  if (participant.isCheckedIn) return { success: false, message: 'You are already checked in.' };\n  \n  const eventStatus = getEventStatus(event.date);\n  if (eventStatus !== 'current') {\n    return { success: false, message: 'Check-in is not available for this event yet or has passed.' };\n  }\n\n  participant.isCheckedIn = true;\n  return { success: true, message: 'Successfully checked in!' };\n}\n\n\n// --- User Functions ---\nexport async function getMockUserById(userId: string): Promise<User | undefined> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 200));\n  const user = mockUsers.find(u => u.id === userId);\n  return user ? JSON.parse(JSON.stringify(user)) : undefined;\n}\n\n// Mock function for Blessing Skin Server OAuth - returns a mock user\nexport async function mockOAuthLogin(username?: string, password?: string): Promise<User | null> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  // In a real scenario, you'd verify credentials with Blessing Skin Server\n  // For mock, just return 'Steve' if no specific user is requested, or find by username\n  if (username) {\n    const user = mockUsers.find(u => u.username.toLowerCase() === username.toLowerCase());\n    return user || null;\n  }\n  return mockUsers[0]; // Default to Steve\n}\n\nexport async function getUserProfile(userId: string): Promise<{ user: User; joinedEvents: Event[] } | null> {\n  await new Promise(resolve => setTimeout(resolve, 400));\n  const user = mockUsers.find(u => u.id === userId);\n  if (!user) return null;\n\n  const joinedEvents = mockEvents.filter(event => user.joinedEventIds?.includes(event.id));\n  return { user: JSON.parse(JSON.stringify(user)), joinedEvents: JSON.parse(JSON.stringify(joinedEvents)) };\n}\n\n// This would be stored in .env ideally\nexport const ADMIN_CREATE_EVENT_PASSWORD = \"supersecretpassword\";\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/event-card.tsx"],"sourcesContent":["import Link from 'next/link';\nimport Image from 'next/image';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport UserAvatar from '@/components/user-avatar';\nimport type { Event, EventStatus } from '@/lib/types';\nimport { CalendarDays, Users, KeyRound, ArrowRight, MapPin } from 'lucide-react';\nimport { format, parseISO } from 'date-fns';\nimport { getEventStatus } from '@/lib/data'; // Ensure this handles dates correctly\n\ninterface EventCardProps {\n  event: Event;\n}\n\nexport default function EventCard({ event }: EventCardProps) {\n  const eventStatus = getEventStatus(event.date);\n  const formattedDate = format(parseISO(event.date), 'MMM d, yyyy HH:mm');\n\n  const statusColors: Record<EventStatus, string> = {\n    upcoming: 'bg-blue-500 hover:bg-blue-600',\n    current: 'bg-green-500 hover:bg-green-600',\n    past: 'bg-gray-500 hover:bg-gray-500',\n  };\n\n  return (\n    <Card className=\"flex flex-col overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 rounded-lg\">\n      {event.imageUrl && (\n        <div className=\"relative w-full h-48\">\n          <Image\n            src={event.imageUrl}\n            alt={event.name}\n            layout=\"fill\"\n            objectFit=\"cover\"\n            data-ai-hint=\"event banner\"\n          />\n           <Badge\n            className={`absolute top-2 right-2 text-white px-2 py-1 text-xs font-semibold rounded ${statusColors[eventStatus]}`}\n          >\n            {eventStatus.toUpperCase()}\n          </Badge>\n        </div>\n      )}\n      <CardHeader>\n        <CardTitle className=\"text-xl font-bold\">{event.name}</CardTitle>\n        <CardDescription className=\"flex items-center text-sm text-muted-foreground pt-1\">\n          <CalendarDays className=\"mr-2 h-4 w-4\" /> {formattedDate}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-grow\">\n        <p className=\"text-sm text-muted-foreground line-clamp-3 mb-4\">\n          {event.description.split('\\n')[0]} {/* Show first line or summarized description */}\n        </p>\n        <div className=\"flex items-center space-x-2 mb-2\">\n          <Users className=\"h-4 w-4 text-muted-foreground\" />\n          <span className=\"text-sm\">\n            {event.participants.length} / {event.participantLimit || '∞'} participants\n          </span>\n        </div>\n        <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n          <KeyRound className=\"h-4 w-4\" />\n          <span>CD-Key: <Badge variant=\"secondary\">{event.cdKey}</Badge></span>\n        </div>\n        {event.participants.length > 0 && (\n          <div className=\"mt-4\">\n            <h4 className=\"text-xs font-semibold mb-1 text-muted-foreground\">Participants:</h4>\n            <div className=\"flex -space-x-2 overflow-hidden\">\n              {event.participants.slice(0, 5).map((p) => (\n                <UserAvatar key={p.id} user={p} className=\"h-6 w-6 border-2 border-card\" />\n              ))}\n              {event.participants.length > 5 && (\n                <div className=\"flex items-center justify-center h-6 w-6 rounded-full bg-muted text-muted-foreground text-xs border-2 border-card\">\n                  +{event.participants.length - 5}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n      <CardFooter>\n        <Button asChild className=\"w-full\" variant=\"default\">\n          <Link href={`/events/${event.id}`}>\n            View Event <ArrowRight className=\"ml-2 h-4 w-4\" />\n          </Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA,sMAA6C,sCAAsC;;;;;;;;;;;AAMpE,SAAS,UAAU,EAAE,KAAK,EAAkB;IACzD,MAAM,cAAc,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,IAAI;IAC7C,MAAM,gBAAgB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,IAAI,GAAG;IAEnD,MAAM,eAA4C;QAChD,UAAU;QACV,SAAS;QACT,MAAM;IACR;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YACb,MAAM,QAAQ,kBACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK,MAAM,QAAQ;wBACnB,KAAK,MAAM,IAAI;wBACf,QAAO;wBACP,WAAU;wBACV,gBAAa;;;;;;kCAEd,8OAAC,iIAAA,CAAA,QAAK;wBACL,WAAW,CAAC,0EAA0E,EAAE,YAAY,CAAC,YAAY,EAAE;kCAElH,YAAY,WAAW;;;;;;;;;;;;0BAI9B,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAqB,MAAM,IAAI;;;;;;kCACpD,8OAAC,gIAAA,CAAA,kBAAe;wBAAC,WAAU;;0CACzB,8OAAC,sNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;4BAAiB;4BAAE;;;;;;;;;;;;;0BAG/C,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC;wBAAE,WAAU;;4BACV,MAAM,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;4BAAC;;;;;;;kCAEpC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;0CACjB,8OAAC;gCAAK,WAAU;;oCACb,MAAM,YAAY,CAAC,MAAM;oCAAC;oCAAI,MAAM,gBAAgB,IAAI;oCAAI;;;;;;;;;;;;;kCAGjE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,8MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC;;oCAAK;kDAAQ,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAa,MAAM,KAAK;;;;;;;;;;;;;;;;;;oBAEtD,MAAM,YAAY,CAAC,MAAM,GAAG,mBAC3B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAmD;;;;;;0CACjE,8OAAC;gCAAI,WAAU;;oCACZ,MAAM,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,kBACnC,8OAAC,oIAAA,CAAA,UAAU;4CAAY,MAAM;4CAAG,WAAU;2CAAzB,EAAE,EAAE;;;;;oCAEtB,MAAM,YAAY,CAAC,MAAM,GAAG,mBAC3B,8OAAC;wCAAI,WAAU;;4CAAoH;4CAC/H,MAAM,YAAY,CAAC,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;0BAO1C,8OAAC,gIAAA,CAAA,aAAU;0BACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;oBAAC,OAAO;oBAAC,WAAU;oBAAS,SAAQ;8BACzC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;;4BAAE;0CACtB,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 883, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import EventCard from '@/components/event-card';\nimport { getEvents, getEventStatus } from '@/lib/data';\nimport type { Event } from '@/lib/types';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { ListChecks } from 'lucide-react';\n\nexport const dynamic = 'force-dynamic'; // Ensure data is fetched on each request for dynamic content\n\nexport default async function HomePage() {\n  const events = await getEvents();\n\n  const upcomingEvents = events.filter(event => getEventStatus(event.date) === 'upcoming');\n  const currentEvents = events.filter(event => getEventStatus(event.date) === 'current');\n  const pastEvents = events.filter(event => getEventStatus(event.date) === 'past');\n\n  const renderEventGrid = (eventList: Event[], title: string) => {\n    if (eventList.length === 0) {\n      return (\n        <Alert className=\"mt-4\">\n          <ListChecks className=\"h-4 w-4\" />\n          <AlertTitle>No Events</AlertTitle>\n          <AlertDescription>\n            There are currently no {title.toLowerCase()} events. Check back later!\n          </AlertDescription>\n        </Alert>\n      );\n    }\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {eventList.map(event => (\n          <EventCard key={event.id} event={event} />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <section className=\"text-center py-8 bg-gradient-to-r from-primary/10 via-background to-accent/10 rounded-lg shadow-sm\">\n        <h1 className=\"text-4xl font-bold tracking-tight text-foreground sm:text-5xl\">\n          Welcome to <span className=\"text-primary\">MineVent</span>\n        </h1>\n        <p className=\"mt-4 text-lg leading-8 text-muted-foreground\">\n          Discover, join, and create exciting Minecraft events.\n        </p>\n      </section>\n\n      <Tabs defaultValue=\"upcoming\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3 mb-6\">\n          <TabsTrigger value=\"upcoming\">Upcoming ({upcomingEvents.length})</TabsTrigger>\n          <TabsTrigger value=\"current\">Current ({currentEvents.length})</TabsTrigger>\n          <TabsTrigger value=\"past\">Past ({pastEvents.length})</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"upcoming\">\n          <h2 className=\"text-2xl font-semibold mb-4 text-foreground\">Upcoming Events</h2>\n          {renderEventGrid(upcomingEvents, \"Upcoming\")}\n        </TabsContent>\n        <TabsContent value=\"current\">\n          <h2 className=\"text-2xl font-semibold mb-4 text-foreground\">Current Events</h2>\n          {renderEventGrid(currentEvents, \"Current\")}\n        </TabsContent>\n        <TabsContent value=\"past\">\n          <h2 className=\"text-2xl font-semibold mb-4 text-foreground\">Past Events</h2>\n          {renderEventGrid(pastEvents, \"Past\")}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;AAEO,MAAM,UAAU,iBAAiB,6DAA6D;AAEtF,eAAe;IAC5B,MAAM,SAAS,MAAM,CAAA,GAAA,kHAAA,CAAA,YAAS,AAAD;IAE7B,MAAM,iBAAiB,OAAO,MAAM,CAAC,CAAA,QAAS,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,IAAI,MAAM;IAC7E,MAAM,gBAAgB,OAAO,MAAM,CAAC,CAAA,QAAS,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,IAAI,MAAM;IAC5E,MAAM,aAAa,OAAO,MAAM,CAAC,CAAA,QAAS,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,IAAI,MAAM;IAEzE,MAAM,kBAAkB,CAAC,WAAoB;QAC3C,IAAI,UAAU,MAAM,KAAK,GAAG;YAC1B,qBACE,8OAAC,iIAAA,CAAA,QAAK;gBAAC,WAAU;;kCACf,8OAAC,kNAAA,CAAA,aAAU;wBAAC,WAAU;;;;;;kCACtB,8OAAC,iIAAA,CAAA,aAAU;kCAAC;;;;;;kCACZ,8OAAC,iIAAA,CAAA,mBAAgB;;4BAAC;4BACQ,MAAM,WAAW;4BAAG;;;;;;;;;;;;;QAIpD;QACA,qBACE,8OAAC;YAAI,WAAU;sBACZ,UAAU,GAAG,CAAC,CAAA,sBACb,8OAAC,mIAAA,CAAA,UAAS;oBAAgB,OAAO;mBAAjB,MAAM,EAAE;;;;;;;;;;IAIhC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;;4BAAgE;0CACjE,8OAAC;gCAAK,WAAU;0CAAe;;;;;;;;;;;;kCAE5C,8OAAC;wBAAE,WAAU;kCAA+C;;;;;;;;;;;;0BAK9D,8OAAC,gIAAA,CAAA,OAAI;gBAAC,cAAa;gBAAW,WAAU;;kCACtC,8OAAC,gIAAA,CAAA,WAAQ;wBAAC,WAAU;;0CAClB,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;;oCAAW;oCAAW,eAAe,MAAM;oCAAC;;;;;;;0CAC/D,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;;oCAAU;oCAAU,cAAc,MAAM;oCAAC;;;;;;;0CAC5D,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;;oCAAO;oCAAO,WAAW,MAAM;oCAAC;;;;;;;;;;;;;kCAErD,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;;0CACjB,8OAAC;gCAAG,WAAU;0CAA8C;;;;;;4BAC3D,gBAAgB,gBAAgB;;;;;;;kCAEnC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;;0CACjB,8OAAC;gCAAG,WAAU;0CAA8C;;;;;;4BAC3D,gBAAgB,eAAe;;;;;;;kCAElC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;;0CACjB,8OAAC;gCAAG,WAAU;0CAA8C;;;;;;4BAC3D,gBAAgB,YAAY;;;;;;;;;;;;;;;;;;;AAKvC","debugId":null}}]
}