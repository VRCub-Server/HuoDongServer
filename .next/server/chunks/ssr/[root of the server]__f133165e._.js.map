{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/default-data.ts"],"sourcesContent":["\n// src/lib/default-data.ts\nimport type { User, Event, Announcement } from './types';\n\nexport const defaultUsers: User[] = [\n    { id: 'Steve', username: 'Steve', avatarUrl: `https://placehold.co/100x100.png?text=St`, op: 0, password: '123456', qqNumber: '10001', ban: 0 },\n    { id: 'Alex', username: 'Alex', avatarUrl: `https://placehold.co/100x100.png?text=Al`, op: 0, password: '123456', qqNumber: '10002', ban: 0 },\n    { id: 'Notch', username: 'Notch', avatarUrl: `https://placehold.co/100x100.png?text=No`, op: 1, password: '123456', qqNumber: '10003', ban: 0 },\n    { id: 'dream_pep_id', username: 'dream_pep', avatarUrl: `https://placehold.co/100x100.png?text=dr`, op: 1, password: '123456', qqNumber: '12345678', ban: 0 },\n    { id: 'co_admin_user', username: 'CoAdmin', avatarUrl: `https://placehold.co/100x100.png?text=CA`, op: 2, password: '123456', qqNumber: '20001', ban: 0 },\n    { id: 'banned_user', username: 'BannedUser', avatarUrl: `https://placehold.co/100x100.png?text=BU`, op: 0, password: '123456', qqNumber: '30001', ban: 1 },\n];\n\nexport const defaultEvents: Event[] = [\n    {\n        id: 'event1', name: '生存游戏锦标赛', date: '2024-07-29T12:00:00.000Z',\n        description: \"\\n### 欢迎参加年度生存游戏！\\n证明你的勇气，成为最后的幸存者。\\n**规则：**\\n- 禁止作弊\\n- 联盟是暂时的\\n- 玩得开心！\\n**奖品：**\\n- 第一名：钻石奖杯\\n- 第二名：金锭\\n- 第三名：铁制工具\\n\",\n        participantLimit: 24,\n        participants: [ \n             { id: 'Steve', username: 'Steve', avatarUrl: `https://placehold.co/100x100.png?text=St`, isCheckedIn: false, op: 0, password: '123456', qqNumber: '10001', ban: 0 },\n             { id: 'dream_pep_id', username: 'dream_pep', avatarUrl: `https://placehold.co/100x100.png?text=dr`, isCheckedIn: false, op: 1, password: '123456', qqNumber: '12345678', ban: 0 }\n        ],\n        cdKey: 'SURVIVAL2024', imageUrl: `https://placehold.co/800x400.png`, organizerId: 'Notch',\n    },\n    {\n        id: 'event2', name: '创意建筑大赛', date: '2024-07-22T12:00:00.000Z',\n        description: \"\\n## 展示你的建筑技巧！\\n主题：**中世纪城堡**\\n在时限内建造最令人印象深刻的城堡。\\n评分标准：\\n- 创意\\n- 细节\\n- 规模\\n\",\n        participantLimit: 50,\n        participants: [\n            { id: 'Steve', username: 'Steve', avatarUrl: `https://placehold.co/100x100.png?text=St`, isCheckedIn: true, op: 0, password: '123456', qqNumber: '10001', ban: 0 },\n            { id: 'Alex', username: 'Alex', avatarUrl: `https://placehold.co/100x100.png?text=Al`, isCheckedIn: false, op: 0, password: '123456', qqNumber: '10002', ban: 0 },\n        ],\n        cdKey: 'BUILDMC2024', imageUrl: `https://placehold.co/800x400.png`, organizerId: 'Notch',\n    },\n    {\n        id: 'event3', name: '跑酷挑战赛', date: '2024-07-08T12:00:00.000Z',\n        description: '在我们迄今为止最难的跑酷地图中测试你的敏捷性。完成即可获得奖励！',\n        participants: [ { id: 'dream_pep_id', username: 'dream_pep', avatarUrl: `https://placehold.co/100x100.png?text=dr`, isCheckedIn: true, op: 1, password: '123456', qqNumber: '12345678', ban: 0 } ],\n        cdKey: 'PARKOURX', imageUrl: `https://placehold.co/800x400.png`, organizerId: 'Notch',\n    },\n     {\n        id: 'event4', name: '红石装置展览会', date: '2024-08-21T12:00:00.000Z',\n        description: '展示你最巧妙的红石发明。创新是关键！', participantLimit: 10, participants: [],\n        cdKey: 'REDSTONEFAI', imageUrl: `https://placehold.co/800x400.png`, organizerId: 'Notch',\n    },\n    {\n        id: 'event_1747228478227_2n7f2', name: '测试活动', date: '2025-05-16T21:14',\n        description: '这是个测试活动将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通将菜单改为侧边栏与仪表盘的数据面盘打通',\n        participantLimit: 50, cdKey: 'Beta1', imageUrl: '',\n        participants: [{id: 'dream_pep_id', username: 'dream_pep', avatarUrl: 'https://placehold.co/100x100.png?text=dr', isCheckedIn: false, op: 1, password: \"123456\", qqNumber: '12345678', ban: 0}],\n        organizerId: 'dream_pep_id'\n    }\n];\n\nexport const defaultAnnouncements: Announcement[] = [\n  { id: 'announce1', title: '欢迎来到 VRCub 活动中心!', content: '发现、加入并创建精彩的《我的世界》活动。祝您玩得愉快！', date: new Date().toISOString() },\n  { id: 'announce2', title: '新功能：仪表盘公告', content: '现在您可以在仪表盘查阅最新公告了。', date: new Date(Date.now() - 86400000).toISOString() },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/db.ts"],"sourcesContent":["\nimport Database from 'better-sqlite3';\nimport path from 'path';\nimport fs from 'fs';\nimport type { User, Event, Participant, Announcement } from './types';\nimport { defaultUsers, defaultEvents, defaultAnnouncements } from './default-data';\n\nconst DATA_DIR = path.join(process.cwd(), 'data');\nconst DB_PATH = path.join(DATA_DIR, 'minevent.sqlite');\n\nif (!fs.existsSync(DATA_DIR)) {\n  fs.mkdirSync(DATA_DIR, { recursive: true });\n}\n\nexport const db = new Database(DB_PATH);\ndb.pragma('journal_mode = WAL');\ndb.pragma('foreign_keys = ON');\n\nfunction initializeDatabase() {\n  console.log('Initializing database schema...');\n\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS users (\n      id TEXT PRIMARY KEY,\n      username TEXT NOT NULL UNIQUE,\n      avatarUrl TEXT,\n      op INTEGER DEFAULT 0,\n      password TEXT,\n      qqNumber TEXT UNIQUE,\n      ban INTEGER DEFAULT 0 \n    );\n\n    CREATE TABLE IF NOT EXISTS events (\n      id TEXT PRIMARY KEY,\n      name TEXT NOT NULL,\n      date TEXT NOT NULL,\n      description TEXT NOT NULL,\n      participantLimit INTEGER,\n      cdKey TEXT NOT NULL UNIQUE,\n      imageUrl TEXT,\n      organizerId TEXT NOT NULL,\n      FOREIGN KEY (organizerId) REFERENCES users(id) ON DELETE SET NULL\n    );\n\n    CREATE TABLE IF NOT EXISTS announcements (\n      id TEXT PRIMARY KEY,\n      title TEXT NOT NULL,\n      content TEXT NOT NULL,\n      date TEXT NOT NULL\n    );\n\n    CREATE TABLE IF NOT EXISTS event_participants (\n      eventId TEXT NOT NULL,\n      userId TEXT NOT NULL,\n      isCheckedIn INTEGER DEFAULT 0,\n      PRIMARY KEY (eventId, userId),\n      FOREIGN KEY (eventId) REFERENCES events(id) ON DELETE CASCADE,\n      FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n    );\n  `);\n  console.log('Base schema initialized/verified.');\n\n  // Check if columns exist and add them if not (for existing databases)\n  const userInfo = db.pragma('table_info(users)') as { name: string }[];\n  \n  if (!userInfo.some(col => col.name === 'qqNumber')) {\n    console.log('Attempting to add qqNumber column to existing users table...');\n    try {\n        db.exec('ALTER TABLE users ADD COLUMN qqNumber TEXT UNIQUE');\n        console.log('qqNumber column added successfully.');\n    } catch (alterError) {\n        console.warn('Could not add qqNumber column (it might already exist or other schema issue):', (alterError as Error).message);\n    }\n  }\n\n  if (!userInfo.some(col => col.name === 'ban')) {\n    console.log('Attempting to add ban column to existing users table...');\n     try {\n        db.exec('ALTER TABLE users ADD COLUMN ban INTEGER DEFAULT 0');\n        console.log('ban column added successfully.');\n    } catch (alterError) {\n        console.warn('Could not add ban column (it might already exist or other schema issue):', (alterError as Error).message);\n    }\n  }\n  console.log('Schema checks and alterations (if any) complete.');\n\n  // Seed users table\n  const userCountStmt = db.prepare('SELECT COUNT(*) as count FROM users');\n  const userCount = userCountStmt.get() as { count: number };\n\n  const insertUser = db.prepare('INSERT OR IGNORE INTO users (id, username, avatarUrl, op, password, qqNumber, ban) VALUES (@id, @username, @avatarUrl, @op, @password, @qqNumber, @ban)');\n  const updateUserMissingFields = db.prepare('UPDATE users SET qqNumber = COALESCE(qqNumber, @qqNumber), ban = COALESCE(ban, @ban) WHERE id = @id');\n\n  if (userCount.count === 0) {\n    console.log('Seeding users table with default users...');\n    db.transaction(() => {\n      for (const user of defaultUsers) {\n        insertUser.run({\n          id: user.id,\n          username: user.username,\n          avatarUrl: user.avatarUrl || `https://placehold.co/100x100.png?text=${user.username.substring(0,2).toUpperCase()}`,\n          op: user.op === undefined ? 0 : user.op,\n          password: user.password || '123456',\n          qqNumber: user.qqNumber || null,\n          ban: user.ban === undefined ? 0 : user.ban\n        });\n      }\n    })();\n    console.log('Users table seeded.');\n  } else {\n    // For existing databases, ensure default users have qqNumber and ban populated if missing, or insert if default user is missing\n    console.log('Verifying and updating default users in existing users table...');\n    db.transaction(() => {\n        for (const defaultUser of defaultUsers) {\n            const existingUser = db.prepare('SELECT id, qqNumber, ban FROM users WHERE id = ?').get(defaultUser.id) as User | undefined;\n            if (existingUser) {\n                const fieldsToUpdate: any = { id: defaultUser.id };\n                let needsUpdate = false;\n                if (existingUser.qqNumber === null && defaultUser.qqNumber) {\n                    fieldsToUpdate.qqNumber = defaultUser.qqNumber;\n                    needsUpdate = true;\n                }\n                 if (existingUser.ban === null || existingUser.ban === undefined) { // Check for null or undefined\n                    fieldsToUpdate.ban = defaultUser.ban === undefined ? 0 : defaultUser.ban;\n                    needsUpdate = true;\n                }\n                 if (needsUpdate) {\n                    updateUserMissingFields.run(fieldsToUpdate);\n                 }\n            } else {\n                 insertUser.run({\n                    id: defaultUser.id,\n                    username: defaultUser.username,\n                    avatarUrl: defaultUser.avatarUrl || `https://placehold.co/100x100.png?text=${defaultUser.username.substring(0,2).toUpperCase()}`,\n                    op: defaultUser.op === undefined ? 0 : defaultUser.op,\n                    password: defaultUser.password || '123456',\n                    qqNumber: defaultUser.qqNumber || null,\n                    ban: defaultUser.ban === undefined ? 0 : defaultUser.ban\n                });\n            }\n        }\n    })();\n    console.log('Verified/updated default users.');\n  }\n\n  // Seed events and event_participants table if events table is empty\n  const eventCountStmt = db.prepare('SELECT COUNT(*) as count FROM events');\n  const eventCount = eventCountStmt.get() as { count: number };\n  if (eventCount.count === 0) {\n    console.log('Seeding events and event_participants tables...');\n    const insertEvent = db.prepare('INSERT INTO events (id, name, date, description, participantLimit, cdKey, imageUrl, organizerId) VALUES (@id, @name, @date, @description, @participantLimit, @cdKey, @imageUrl, @organizerId)');\n    const insertParticipant = db.prepare('INSERT OR IGNORE INTO event_participants (eventId, userId, isCheckedIn) VALUES (@eventId, @userId, @isCheckedIn)');\n    \n    db.transaction(() => {\n      for (const event of defaultEvents) {\n        // Ensure organizer exists before creating event\n        const organizerExistsStmt = db.prepare('SELECT id FROM users WHERE id = ?');\n        const organizerExists = organizerExistsStmt.get(event.organizerId);\n        if (!organizerExists) {\n            console.warn(`Skipping event ${event.name} as organizer ${event.organizerId} does not exist. Please ensure default users are seeded first or this organizer is valid.`);\n            continue;\n        }\n\n        insertEvent.run({\n          id: event.id,\n          name: event.name,\n          date: event.date,\n          description: event.description,\n          participantLimit: event.participantLimit === undefined ? null : event.participantLimit,\n          cdKey: event.cdKey,\n          imageUrl: event.imageUrl || '',\n          organizerId: event.organizerId\n        });\n        for (const p of event.participants) {\n          const userExistsStmt = db.prepare('SELECT id FROM users WHERE id = ?');\n          const userExists = userExistsStmt.get(p.id);\n          if (userExists) {\n            insertParticipant.run({\n              eventId: event.id,\n              userId: p.id,\n              isCheckedIn: p.isCheckedIn ? 1 : 0\n            });\n          } else {\n            console.warn(`Skipping participant ${p.id} for event ${event.id} as user does not exist.`);\n          }\n        }\n      }\n    })();\n    console.log('Events and event_participants tables seeded.');\n  }\n  \n  // Seed announcements table if empty\n  const announcementCountStmt = db.prepare('SELECT COUNT(*) as count FROM announcements');\n  const announcementCount = announcementCountStmt.get() as { count: number };\n  if (announcementCount.count === 0) {\n    console.log('Seeding announcements table...');\n    const insertAnnouncement = db.prepare('INSERT INTO announcements (id, title, content, date) VALUES (@id, @title, @content, @date)');\n    db.transaction(() => {\n      for (const announcement of defaultAnnouncements) {\n        insertAnnouncement.run(announcement);\n      }\n    })();\n    console.log('Announcements table seeded.');\n  }\n}\n\n// Attempt to initialize database, handle potential errors\ntry {\n  initializeDatabase();\n} catch (err) {\n  console.error(\"CRITICAL: Database initialization failed during initial setup:\", (err as Error).message);\n}\n\nexport default db;\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\nimport type {Database} from 'better-sqlite3';\nimport db from './db'; \nimport type { Event, User, Participant, Announcement } from './types';\nimport { parseISO } from 'date-fns';\n\n// --- User Functions ---\nexport async function getUsers(): Promise<User[]> {\n  const stmt = db.prepare('SELECT id, username, avatarUrl, op, password, qqNumber, ban FROM users');\n  return stmt.all() as User[];\n}\n\nexport async function getUserById(userId: string): Promise<User | undefined> {\n  const stmt = db.prepare('SELECT id, username, avatarUrl, op, password, qqNumber, ban FROM users WHERE id = ?');\n  return stmt.get(userId) as User | undefined;\n}\n\nexport async function getUserByUsername(username: string): Promise<User | undefined> {\n  const stmt = db.prepare('SELECT id, username, avatarUrl, op, password, qqNumber, ban FROM users WHERE lower(username) = lower(?)');\n  return stmt.get(username) as User | undefined;\n}\n\nexport async function getUserByQQNumber(qqNumber: string): Promise<User | undefined> {\n  const stmt = db.prepare('SELECT id, username, avatarUrl, op, password, qqNumber, ban FROM users WHERE qqNumber = ?');\n  return stmt.get(qqNumber) as User | undefined;\n}\n\nexport async function createUser(userData: Omit<User, 'avatarUrl' | 'op' | 'ban'> & Partial<Pick<User, 'avatarUrl' | 'op' | 'ban' | 'qqNumber'>>): Promise<User> {\n  const newUser: User = {\n    id: userData.id || userData.username, // Default ID to username if not provided\n    username: userData.username,\n    avatarUrl: userData.avatarUrl || `https://placehold.co/100x100.png?text=${userData.username.substring(0, 2).toUpperCase()}`,\n    op: userData.op === undefined ? 0 : userData.op,\n    password: userData.password, \n    qqNumber: userData.qqNumber || undefined, // Will be NULL in DB if undefined\n    ban: userData.ban === undefined ? 0 : userData.ban,\n  };\n\n  const stmt = db.prepare('INSERT INTO users (id, username, avatarUrl, op, password, qqNumber, ban) VALUES (@id, @username, @avatarUrl, @op, @password, @qqNumber, @ban)');\n  try {\n    stmt.run(newUser);\n    const createdUser = await getUserById(newUser.id);\n    if (!createdUser) throw new Error('User creation seemed successful but could not fetch the new user.');\n    return createdUser;\n  } catch (error) {\n    console.error(`Failed to create user ${userData.username}:`, error);\n    if ((error as any).code === 'SQLITE_CONSTRAINT_UNIQUE') {\n      if (await getUserByUsername(newUser.username)) {\n        throw new Error(`Username ${newUser.username} already exists.`);\n      }\n      if (newUser.qqNumber && await getUserByQQNumber(newUser.qqNumber)) {\n         throw new Error(`QQ Number ${newUser.qqNumber} is already associated with another account.`);\n      }\n    }\n    throw new Error(`Failed to create user ${userData.username}: ${(error as Error).message}`);\n  }\n}\n\nexport async function updateUserById(userId: string, userData: Partial<Pick<User, 'username' | 'avatarUrl' | 'op' | 'password' | 'qqNumber' | 'ban'>>): Promise<User | null> {\n  const currentUser = await getUserById(userId);\n  if (!currentUser) return null;\n\n  const fieldsToUpdate: Record<string, any> = {};\n  if (userData.username !== undefined) fieldsToUpdate.username = userData.username;\n  if (userData.avatarUrl !== undefined) fieldsToUpdate.avatarUrl = userData.avatarUrl;\n  if (userData.op !== undefined) fieldsToUpdate.op = userData.op;\n  if (userData.password !== undefined && userData.password !== '') fieldsToUpdate.password = userData.password;\n  if (userData.qqNumber !== undefined) fieldsToUpdate.qqNumber = userData.qqNumber === '' ? null : userData.qqNumber;\n  if (userData.ban !== undefined) fieldsToUpdate.ban = userData.ban;\n\n\n  if (Object.keys(fieldsToUpdate).length === 0) {\n    return currentUser; \n  }\n\n  const setClauses = Object.keys(fieldsToUpdate).map(key => `${key} = @${key}`).join(', ');\n  const stmt = db.prepare(`UPDATE users SET ${setClauses} WHERE id = @id`);\n  \n  try {\n    stmt.run({ ...fieldsToUpdate, id: userId });\n  } catch (error) {\n    console.error(`Failed to update user ${userId}:`, error);\n     if ((error as any).code === 'SQLITE_CONSTRAINT_UNIQUE') {\n        if (userData.username && fieldsToUpdate.username && (await getUserByUsername(userData.username))?.id !== userId) {\n            throw new Error(`Username ${userData.username} is already taken.`);\n        }\n        if (userData.qqNumber && fieldsToUpdate.qqNumber && userData.qqNumber !== '' && (await getUserByQQNumber(userData.qqNumber))?.id !== userId) { // Check if new QQ is not empty before unique check\n            throw new Error(`QQ Number ${userData.qqNumber} is already associated with another account.`);\n        }\n    }\n    throw new Error(`Failed to update user ${userId}: ${(error as Error).message}`);\n  }\n  \n  return await getUserById(userId);\n}\n\nexport async function deleteUserById(userId: string): Promise<{ success: boolean, message: string }> {\n  const eventOrganizerCheckStmt = db.prepare('SELECT COUNT(*) as count FROM events WHERE organizerId = ?');\n  const organizerCountResult = eventOrganizerCheckStmt.get(userId) as { count: number };\n\n  if (organizerCountResult.count > 0) {\n    return { success: false, message: `无法删除用户 ${userId}，因为他们是 ${organizerCountResult.count} 个活动的组织者。请先转移或删除这些活动。` };\n  }\n  \n  const deleteUserStmt = db.prepare('DELETE FROM users WHERE id = ?'); \n  const result = deleteUserStmt.run(userId);\n\n  if (result.changes > 0) {\n    return { success: true, message: `用户 ${userId} 已成功删除。` };\n  }\n  return { success: false, message: `用户 ${userId} 未找到，无法删除。` };\n}\n\n\n// --- Event Functions ---\nasync function getEventParticipants(eventId: string): Promise<Participant[]> {\n  const stmt = db.prepare(`\n    SELECT u.id, u.username, u.avatarUrl, u.op, u.password, u.qqNumber, u.ban, ep.isCheckedIn \n    FROM users u\n    JOIN event_participants ep ON u.id = ep.userId\n    WHERE ep.eventId = ?\n  `);\n  const participantsData = stmt.all(eventId) as Array<Omit<Participant, 'joinedEventIds'> & { isCheckedIn: 0 | 1 }>;\n  return participantsData.map(p => ({...p, isCheckedIn: p.isCheckedIn === 1}));\n}\n\nexport async function getEvents(): Promise<Event[]> {\n  const eventsStmt = db.prepare('SELECT * FROM events');\n  const rawEvents = eventsStmt.all() as Array<Omit<Event, 'participants'>>;\n  \n  const events: Event[] = [];\n  for (const rawEvent of rawEvents) {\n    const participants = await getEventParticipants(rawEvent.id);\n    events.push({ ...rawEvent, participants });\n  }\n  return events;\n}\n\nexport async function getEventById(id: string): Promise<Event | undefined> {\n  const eventStmt = db.prepare('SELECT * FROM events WHERE id = ?');\n  const rawEvent = eventStmt.get(id) as Omit<Event, 'participants'> | undefined;\n\n  if (!rawEvent) return undefined;\n\n  const participants = await getEventParticipants(rawEvent.id);\n  return { ...rawEvent, participants };\n}\n\nexport async function getEventsForUser(userId: string): Promise<Event[]> {\n  const stmt = db.prepare(`\n    SELECT e.*\n    FROM events e\n    JOIN event_participants ep ON e.id = ep.eventId\n    WHERE ep.userId = ?\n  `);\n  const rawEvents = stmt.all(userId) as Array<Omit<Event, 'participants'>>;\n  \n  const joinedEvents: Event[] = [];\n  for (const rawEvent of rawEvents) {\n    const participants = await getEventParticipants(rawEvent.id);\n    joinedEvents.push({ ...rawEvent, participants });\n  }\n  return joinedEvents;\n}\n\n\nexport async function getEventByCdKey(cdKey: string): Promise<Event | undefined> {\n  const eventStmt = db.prepare('SELECT * FROM events WHERE lower(cdKey) = lower(?)');\n  const rawEvent = eventStmt.get(cdKey) as Omit<Event, 'participants'> | undefined;\n\n  if (!rawEvent) return undefined;\n\n  const participants = await getEventParticipants(rawEvent.id);\n  return { ...rawEvent, participants };\n}\n\nexport async function createEvent(eventData: Omit<Event, 'id' | 'participants' | 'organizerId'>, organizerId: string): Promise<Event> {\n  const newEventId = `event_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`;\n  const participantLimit = typeof eventData.participantLimit === 'number' && !isNaN(eventData.participantLimit) ? eventData.participantLimit : null;\n\n  const newEventRow = {\n    id: newEventId,\n    name: eventData.name,\n    date: eventData.date, \n    description: eventData.description,\n    participantLimit: participantLimit,\n    cdKey: eventData.cdKey,\n    imageUrl: eventData.imageUrl || '',\n    organizerId,\n  };\n  const stmt = db.prepare('INSERT INTO events (id, name, date, description, participantLimit, cdKey, imageUrl, organizerId) VALUES (@id, @name, @date, @description, @participantLimit, @cdKey, @imageUrl, @organizerId)');\n  stmt.run(newEventRow);\n  const createdEvent = await getEventById(newEventId);\n  if (!createdEvent) throw new Error('Event creation seemed successful but could not fetch the new event.');\n  return createdEvent;\n}\n\nexport async function updateEventById(eventId: string, eventData: Partial<Omit<Event, 'id' | 'participants' | 'organizerId'>>): Promise<Event | null> {\n  const { name, date, description, participantLimit, cdKey, imageUrl } = eventData;\n  \n  const actualParticipantLimit = typeof participantLimit === 'number' && !isNaN(participantLimit) \n                                  ? participantLimit \n                                  : (participantLimit === null ? null : undefined); \n\n  const fieldsToUpdate: Record<string, any> = {};\n  if (name !== undefined) fieldsToUpdate.name = name;\n  if (date !== undefined) fieldsToUpdate.date = date; \n  if (description !== undefined) fieldsToUpdate.description = description;\n  if (actualParticipantLimit !== undefined) fieldsToUpdate.participantLimit = actualParticipantLimit;\n  if (cdKey !== undefined) fieldsToUpdate.cdKey = cdKey;\n  if (imageUrl !== undefined) fieldsToUpdate.imageUrl = imageUrl;\n\n  if (Object.keys(fieldsToUpdate).length === 0) {\n    return getEventById(eventId); \n  }\n\n  const setClauses = Object.keys(fieldsToUpdate).map(key => `${key} = @${key}`).join(', ');\n  const stmt = db.prepare(`UPDATE events SET ${setClauses} WHERE id = @eventId`);\n  \n  const result = stmt.run({ ...fieldsToUpdate, eventId });\n  \n  return getEventById(eventId); \n}\n\nexport async function deleteEventById(eventId: string): Promise<{ success: boolean, message: string }> {\n  const stmt = db.prepare('DELETE FROM events WHERE id = ?'); \n  const result = stmt.run(eventId);\n\n  if (result.changes > 0) {\n    return { success: true, message: \"活动已成功删除。\" };\n  }\n  return { success: false, message: \"活动未找到，无法删除。\" };\n}\n\n\nexport async function joinEvent(userId: string, eventId: string, cdKeyInput: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  const event = await getEventById(eventId);\n  if (!event) return { success: false, message: '活动未找到。' };\n\n  const user = await getUserById(userId);\n  if (!user) return { success: false, message: '用户未找到。' };\n  if (user.ban === 1) return { success: false, message: '您的账户已被封禁，无法加入活动。' };\n\n\n  if (event.cdKey.toLowerCase() !== cdKeyInput.toLowerCase()) return { success: false, message: '无效的活动代码。' };\n  \n  const currentParticipants = await getEventParticipants(eventId); \n  if (event.participantLimit && currentParticipants.length >= event.participantLimit) {\n    return { success: false, message: '活动人数已满。' };\n  }\n  if (currentParticipants.some(p => p.id === userId)) {\n    return { success: true, message: '您已加入此活动。', event };\n  }\n\n  const stmt = db.prepare('INSERT INTO event_participants (eventId, userId, isCheckedIn) VALUES (?, ?, 0)');\n  stmt.run(eventId, userId);\n  \n  const finalEvent = await getEventById(eventId); \n  return { success: true, message: '成功加入活动！', event: finalEvent };\n}\n\n\nexport async function leaveEvent(userId: string, eventId: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  const event = await getEventById(eventId);\n  if (!event) return { success: false, message: '活动未找到。' };\n\n  const stmt = db.prepare('DELETE FROM event_participants WHERE eventId = ? AND userId = ?');\n  const result = stmt.run(eventId, userId);\n\n  if (result.changes > 0) {\n    const updatedEvent = await getEventById(eventId); \n    return { success: true, message: '成功离开活动。', event: updatedEvent };\n  }\n  return { success: false, message: '您当前未加入此活动，或离开失败。' };\n}\n\nexport async function checkInUser(userId: string, eventId: string): Promise<{ success: boolean, message: string }> {\n  const event = await getEventById(eventId);\n  if (!event) return { success: false, message: '活动未找到。' };\n\n  const user = await getUserById(userId);\n  if (!user) return { success: false, message: '用户未找到。' };\n  if (user.ban === 1) return { success: false, message: '您的账户已被封禁，无法签到。' };\n\n  const participants = await getEventParticipants(eventId);\n  const participant = participants.find(p => p.id === userId);\n\n  if (!participant) return { success: false, message: '您未报名参加此活动。' };\n  if (participant.isCheckedIn) return { success: true, message: '您已签到。' };\n\n  const eventDateObj = parseISO(event.date);\n  const today = new Date();\n  \n  const isCurrent = eventDateObj.getFullYear() === today.getFullYear() &&\n                    eventDateObj.getMonth() === today.getMonth() &&\n                    eventDateObj.getDate() === today.getDate();\n\n  if (!isCurrent) {\n    return { success: false, message: '此活动的签到尚未开始或已结束。' };\n  }\n\n  const stmt = db.prepare('UPDATE event_participants SET isCheckedIn = 1 WHERE eventId = ? AND userId = ?');\n  stmt.run(eventId, userId);\n  return { success: true, message: '签到成功！' };\n}\n\n\n// --- Announcement Functions ---\nexport async function getAnnouncements(): Promise<Announcement[]> {\n  const stmt = db.prepare('SELECT * FROM announcements ORDER BY date DESC');\n  return stmt.all() as Announcement[];\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/namemc.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Mocks a check to NameMC to see if a username is valid.\n */\n\n/**\n * Mocks a check to NameMC to see if a username is valid.\n * In a real application, this would involve an API call to NameMC.\n * @param username The Minecraft username to check.\n * @returns Promise<boolean> True if the username is considered valid, false otherwise.\n */\nexport async function checkNameMC(username: string): Promise<boolean> {\n  console.log(`Pretending to check NameMC for username: ${username}`);\n  // In a real scenario:\n  // try {\n  //   // Example: const response = await fetch(`https://api.namemc.com/profile/${username}/uuid`);\n  //   // return response.ok;\n  // } catch (error) {\n  //   console.error(\"NameMC check failed:\", error);\n  //   return false;\n  // }\n\n  // For testing the \"invalid\" path in the login flow\n  if (username.toLowerCase() === \"invalid_player_for_testing\") {\n    console.log(`Mock: Username \"${username}\" is considered invalid by NameMC.`);\n    return false;\n  }\n\n  // Mock: assume most usernames are valid for now\n  console.log(`Mock: Username \"${username}\" is considered valid by NameMC.`);\n  return true;\n}\n"],"names":[],"mappings":";;;;;;;;AAaO,eAAe,uCAAS,GAAT,YAAY,QAAgB;IAChD,QAAQ,GAAG,CAAC,CAAC,yCAAyC,EAAE,UAAU;IAClE,sBAAsB;IACtB,QAAQ;IACR,iGAAiG;IACjG,2BAA2B;IAC3B,oBAAoB;IACpB,kDAAkD;IAClD,kBAAkB;IAClB,IAAI;IAEJ,mDAAmD;IACnD,IAAI,SAAS,WAAW,OAAO,8BAA8B;QAC3D,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,SAAS,kCAAkC,CAAC;QAC3E,OAAO;IACT;IAEA,gDAAgD;IAChD,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,SAAS,gCAAgC,CAAC;IACzE,OAAO;AACT;;;IApBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport crypto from 'crypto';\nimport {\n  createEvent as apiCreateEvent,\n  joinEvent as apiJoinEvent,\n  leaveEvent as apiLeaveEvent,\n  checkInUser as apiCheckInUser,\n  getUserById,\n  getUserByUsername,\n  getUserByQQNumber,\n  getEventById,\n  getEvents as apiGetEvents,\n  createUser as apiCreateUser,\n  getEventByCdKey,\n  getAnnouncements as apiGetAnnouncements,\n  deleteEventById as apiDeleteEventById,\n  updateEventById as apiUpdateEventById,\n  getUsers as apiGetUsers,\n  updateUserById as apiUpdateUserById,\n  deleteUserById as apiDeleteUserById,\n  getEventsForUser,\n} from './data';\nimport type { Event, User, Announcement, AdminAddUserFormState, AdminUpdateUserFormState, ServerAuthFormState } from './types';\nimport { checkNameMC } from './namemc';\n\n\nconst MAX_AGE = 60 * 60 * 24 * 30; // 30 days\n\n// --- Authentication Schemas ---\nconst MinecraftUsernameSchema = z.string()\n  .min(3, \"Minecraft 用户名长度必须在 3 到 16 个字符之间。\")\n  .max(16, \"Minecraft 用户名长度必须在 3 到 16 个字符之间。\")\n  .regex(/^[a-zA-Z0-9_]+$/, \"Minecraft 用户名只能包含字母、数字和下划线。\")\n  .refine(username => !username.startsWith('_') && !username.endsWith('_'), {\n    message: \"Minecraft 用户名不能以下划线开头或结尾。\",\n  });\n\nconst QQNumberSchema = z.string()\n  .min(5, \"QQ号至少为5位数字。\")\n  .max(15, \"QQ号最多为15位数字。\")\n  .regex(/^\\d+$/, \"QQ号必须为纯数字。\");\n\nconst AuthBaseSchema = z.object({\n  minecraftUsername: MinecraftUsernameSchema,\n  password: z.string().min(6, \"密码至少需要6个字符。\"),\n  authMode: z.enum(['login', 'register']),\n});\n\n\nconst AuthFormSchema = z.discriminatedUnion(\"authMode\", [\n  AuthBaseSchema.extend({ authMode: z.literal(\"login\") }),\n  AuthBaseSchema.extend({\n    authMode: z.literal(\"register\"),\n    confirmPassword: z.string(),\n    qqNumber: QQNumberSchema, // QQNumber is now mandatory for registration\n  }),\n]).refine(\n  (data) => {\n    if (data.authMode === \"register\") {\n      return data.password === data.confirmPassword;\n    }\n    return true;\n  },\n  {\n    message: \"两次输入的密码不匹配。\",\n    path: [\"confirmPassword\"],\n  }\n);\n\n\nexport async function authenticateUserAction(prevState: ServerAuthFormState, formData: FormData): Promise<ServerAuthFormState> {\n  try {\n    const rawFormData = Object.fromEntries(formData.entries());\n    console.log(\"[Action] authenticateUserAction: Received raw form data:\", rawFormData);\n    const validatedFields = AuthFormSchema.safeParse(rawFormData);\n\n    if (!validatedFields.success) {\n      console.error(\"[Action] authenticateUserAction: Zod validation failed:\", validatedFields.error.flatten().fieldErrors);\n      return {\n        message: '输入无效。请检查您填写的信息。',\n        errors: validatedFields.error.flatten().fieldErrors,\n        success: false,\n      };\n    }\n    \n    const { minecraftUsername, password, authMode } = validatedFields.data;\n    let sessionUserIdToSet: string | undefined = undefined;\n    let successMessage: string = '';\n    let user: User | null | undefined = null;\n\n    if (authMode === 'login') {\n      console.log(`[Action] authenticateUserAction: Attempting login for user: ${minecraftUsername}`);\n      user = await getUserByUsername(minecraftUsername);\n\n      if (!user) {\n        console.log(`[Action] authenticateUserAction: User ${minecraftUsername} not found.`);\n        return { message: '用户不存在或密码错误。', errors: { form: ['用户不存在或密码错误。'] }, success: false };\n      }\n      if (user.ban === 1) {\n        console.log(`[Action] authenticateUserAction: User ${minecraftUsername} is banned.`);\n        return { message: '您的账户已被封禁，请联系管理员。', errors: { form: ['您的账户已被封禁，请联系管理员。'] }, success: false };\n      }\n      if (user.password !== password) { \n        console.log(`[Action] authenticateUserAction: Password incorrect for user ${minecraftUsername}.`);\n        return { message: '用户不存在或密码错误。', errors: { form: ['用户不存在或密码错误。'] }, success: false };\n      }\n\n      if (user && (!user.qqNumber || user.qqNumber.trim() === '')) {\n        console.log(`[Action] User ${user.username} logged in without QQ. Attempting to assign a random one.`);\n        let assignedQQ: string | undefined = undefined;\n        let attempts = 0;\n        const MAX_ATTEMPTS_QQ_GEN = 20; \n\n        while (attempts < MAX_ATTEMPTS_QQ_GEN && !assignedQQ) {\n            const randomQQ = Math.floor(100000000 + Math.random() * 900000000).toString();\n            const existingUserWithRandomQQ = await getUserByQQNumber(randomQQ);\n            if (!existingUserWithRandomQQ) {\n                assignedQQ = randomQQ;\n            }\n            attempts++;\n        }\n\n        if (assignedQQ) {\n            try {\n                const updatedUser = await apiUpdateUserById(user.id, { qqNumber: assignedQQ });\n                if (updatedUser) {\n                    console.log(`[Action] Successfully assigned random QQ ${assignedQQ} to user ${user.username} during login.`);\n                    user.qqNumber = assignedQQ; \n                } else {\n                    console.error(`[Action] Failed to update user ${user.id} with new QQ ${assignedQQ} in DB, but login will proceed.`);\n                }\n            } catch (updateError) {\n                console.error(`[Action] Error assigning random QQ ${assignedQQ} to user ${user.id}:`, updateError);\n            }\n        } else {\n            console.warn(`[Action] Could not generate a unique random QQ for user ${user.username} after ${MAX_ATTEMPTS_QQ_GEN} attempts. Login will proceed without QQ assignment.`);\n        }\n      }\n      \n      sessionUserIdToSet = user.id;\n      successMessage = '登录成功！即将跳转...';\n      \n    } else if (authMode === 'register') {\n      console.log(`[Action] authenticateUserAction: Attempting registration for user: ${minecraftUsername}`);\n      const { qqNumber } = validatedFields.data; \n\n      const isNameMCValid = await checkNameMC(minecraftUsername);\n      if (!isNameMCValid) {\n        console.log(`[Action] authenticateUserAction: NameMC validation failed for ${minecraftUsername}.`);\n        return { message: '此 Minecraft 用户名在 NameMC 上无效或无法验证。', errors: { minecraftUsername: ['此 Minecraft 用户名在 NameMC 上无效或无法验证。'] }, success: false };\n      }\n\n      const existingUserByUsername = await getUserByUsername(minecraftUsername);\n      if (existingUserByUsername) {\n        console.log(`[Action] authenticateUserAction: Username ${minecraftUsername} already exists.`);\n        return { message: '此 Minecraft 用户名已被注册。', errors: { minecraftUsername: ['此 Minecraft 用户名已被注册。'] }, success: false };\n      }\n      \n      const existingUserByQQ = await getUserByQQNumber(qqNumber);\n      if (existingUserByQQ) {\n        console.log(`[Action] authenticateUserAction: QQ number ${qqNumber} already in use.`);\n        return { message: '此 QQ 号码已被其他用户绑定。', errors: { qqNumber: ['此 QQ 号码已被其他用户绑定。'] }, success: false };\n      }\n      \n      let newUser: User | null = null;\n      try {\n        console.log(`[Action] authenticateUserAction: Creating new user: ${minecraftUsername} with QQ: ${qqNumber}`);\n        newUser = await apiCreateUser({ \n          id: minecraftUsername, \n          username: minecraftUsername,\n          password: password, \n          qqNumber: qqNumber,\n          op: 0, \n          ban: 0, \n          avatarUrl: `https://placehold.co/100x100.png?text=${minecraftUsername.substring(0,2).toUpperCase()}`\n        });\n      } catch (error: any) {\n        console.error(\"[Action] authenticateUserAction: Error during apiCreateUser:\", error);\n        return { message: `创建用户时出错: ${error.message || '未知数据库错误'}`, errors: { form: [`创建用户时出错: ${error.message || '未知数据库错误'}`] }, success: false };\n      }\n\n      if (!newUser || !newUser.id) {\n         console.error(\"[Action] authenticateUserAction: User creation seemed successful but newUser object is invalid.\");\n         return { message: '创建用户后未能获取用户信息。', errors: { form: ['创建用户后未能获取用户信息。'] }, success: false };\n      }\n      sessionUserIdToSet = newUser.id;\n      successMessage = '账户创建成功！即将跳转...';\n    }\n\n    if (sessionUserIdToSet) {\n      console.log(`[Action] authenticateUserAction: Setting cookie for userId: ${sessionUserIdToSet}`);\n      cookies().set('userId', sessionUserIdToSet, { \n        httpOnly: true, \n        secure: process.env.NODE_ENV === 'production', \n        maxAge: MAX_AGE, \n        path: '/', \n        sameSite: 'lax' \n      });\n      return { success: true, message: successMessage, userId: sessionUserIdToSet };\n    } else {\n      console.error(\"[Action] authenticateUserAction: sessionUserIdToSet was not set. This should not happen if login/register was successful.\");\n      return { message: '认证过程出现意外，未能设置用户会话。', success: false, errors: {form: ['认证过程出现意外，未能设置用户会话。']} };\n    }\n\n  } catch (error: any) {\n    if (error && typeof error === 'object' && 'digest' in error && typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) {\n      console.log(\"[Action] authenticateUserAction: Caught NEXT_REDIRECT, re-throwing.\");\n      throw error; \n    }\n    console.error(\"[Action] authenticateUserAction: Top-level Server Error:\", error);\n    const errorMessage = error instanceof Error ? error.message : '认证过程中发生服务器内部错误。';\n    return { message: `服务器错误: ${errorMessage} 请稍后再试。`, success: false, errors: { form: [`服务器错误: ${errorMessage} 请稍后再试。`]} };\n  }\n}\n\n\nexport async function logout() {\n  cookies().delete('userId');\n  redirect('/login');\n}\n\nexport async function getSessionUser(): Promise<User | null> {\n  const userId = cookies().get('userId')?.value;\n  if (!userId) return null;\n  try {\n    const user = await getUserById(userId); \n    if (!user) {\n        cookies().delete('userId'); \n        return null;\n    }\n    return user;\n  } catch (error) {\n    console.error(\"getSessionUser - Error fetching user:\", error);\n    return null;\n  }\n}\n\n// --- Event Actions ---\nconst CreateEventFormSchema = z.object({\n  name: z.string().min(3, \"活动名称至少需要3个字符。\"),\n  date: z.string().refine((date) => !isNaN(Date.parse(date)), \"无效的日期格式。\"),\n  description: z.string().min(10, \"描述至少需要10个字符。\"),\n  participantLimit: z.preprocess(\n    (val) => (val === \"\" || val === null || val === undefined ? undefined : Number(val)),\n    z.number().int().positive().optional().nullable()\n  ),\n  cdKey: z.string().min(4, \"活动代码至少需要4个字符。\").max(20, \"活动代码最多20个字符。\"),\n  imageUrl: z.string().url(\"无效的图片链接。\").optional().or(z.literal('')),\n  userPassword: z.string().min(1, \"您的账户密码不能为空。\")\n});\n\nexport type CreateEventFormState = {\n  errors?: {\n    name?: string[];\n    date?: string[];\n    description?: string[];\n    participantLimit?: string[];\n    cdKey?: string[];\n    imageUrl?: string[];\n    userPassword?: string[];\n    form?: string[];\n  };\n  message?: string | null;\n  success: boolean;\n};\n\n\nexport async function createEventAction(prevState: CreateEventFormState, formData: FormData): Promise<CreateEventFormState> {\n  try {\n    const rawFormData = Object.fromEntries(formData.entries());\n    const validatedFields = CreateEventFormSchema.safeParse(rawFormData);\n\n    if (!validatedFields.success) {\n      return {\n        errors: validatedFields.error.flatten().fieldErrors,\n        message: '创建活动失败。请检查所填字段。',\n        success: false,\n      };\n    }\n\n    const user = await getSessionUser();\n    if (!user || (user.op !== 1 && user.op !== 2) ) { \n      return { message: '您没有创建活动的权限。', errors: { form: ['权限不足。'] }, success: false };\n    }\n\n    if (!user.password || user.password !== validatedFields.data.userPassword) {\n      return {\n        errors: { ...(validatedFields.error?.flatten().fieldErrors || {}), userPassword: ['您的账户密码不正确。'] },\n        message: '创建活动失败。账户密码验证失败。',\n        success: false,\n      };\n    }\n\n    const { userPassword, ...eventDataForApi } = validatedFields.data;\n\n    const newEvent = await apiCreateEvent( \n        eventDataForApi as Omit<Event, 'id' | 'participants' | 'organizerId'>, \n        user.id\n    );\n    \n    if (newEvent?.id) {\n      redirect(`/events/${newEvent.id}`);\n    } else {\n      return { message: '创建活动后未能获取活动ID。', errors: { form: ['创建活动后未能获取活动ID。'] }, success: false };\n    }\n  } catch (error: any) {\n    if (error && typeof error === 'object' && 'digest' in error && typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) {\n      throw error;\n    }\n    console.error(\"Create Event Action - Server Error:\", error);\n    return { message: '创建活动时发生意外的服务器错误。', errors: { form: ['创建活动时发生意外的服务器错误。'] }, success: false };\n  }\n}\n\nconst UpdateEventFormSchema = CreateEventFormSchema.extend({\n  eventId: z.string().min(1, \"Event ID is required.\"),\n});\n\nexport type UpdateEventFormState = CreateEventFormState & { \n  errors?: CreateEventFormState['errors'] & {\n    eventId?: string[];\n  }\n};\n\n\nexport async function updateEventAction(prevState: UpdateEventFormState, formData: FormData): Promise<UpdateEventFormState> {\n  try {\n    const rawFormData = Object.fromEntries(formData.entries());\n    const validatedFields = UpdateEventFormSchema.safeParse(rawFormData);\n\n    if (!validatedFields.success) {\n      return {\n        errors: validatedFields.error.flatten().fieldErrors,\n        message: '更新活动失败。请检查所填字段。',\n        success: false,\n      };\n    }\n\n    const user = await getSessionUser();\n     if (!user || (user.op !== 1 && user.op !== 2) ) { \n      return { message: '您没有更新活动的权限。', errors: { form: ['权限不足。'] }, success: false };\n    }\n    if (!user.password || user.password !== validatedFields.data.userPassword) {\n      return {\n        errors: { ...(validatedFields.error?.flatten().fieldErrors || {}), userPassword: ['您的账户密码不正确。'] },\n        message: '更新活动失败。账户密码验证失败。',\n        success: false,\n      };\n    }\n\n    const { userPassword, eventId, ...eventDataToUpdate } = validatedFields.data;\n    const updatedEvent = await apiUpdateEventById(eventId, eventDataToUpdate as Partial<Omit<Event, 'id' | 'participants' | 'organizerId'>>);\n    \n    if (!updatedEvent) {\n      return { message: '更新活动失败，活动未找到或没有更改。', errors: { form: ['活动未找到或没有进行任何更改。'] }, success: false };\n    }\n    return { message: '活动已成功更新！即将跳转...', success: true };\n\n  } catch (error: any) {\n     if (error && typeof error === 'object' && 'digest' in error && typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) {\n      throw error;\n    }\n    console.error(\"Update Event Action - Server Error:\", error);\n    return { message: '更新活动时发生意外的服务器错误。', errors: { form: ['更新活动时发生意外的服务器错误。'] }, success: false };\n  }\n}\n\n\nexport async function deleteEventAction(eventId: string, adminPasswordInput: string): Promise<{ success: boolean, message: string }> {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: '需要认证才能删除活动。请先登录。' };\n  }\n  if (user.op !== 1) { \n    return { success: false, message: '您没有删除活动的权限。' };\n  }\n  if (!user.password || user.password !== adminPasswordInput) {\n    return { success: false, message: '您的账户密码不正确，无法删除活动。' };\n  }\n\n  try {\n    const result = await apiDeleteEventById(eventId); \n    return result;\n  } catch (error) {\n    console.error(\"删除活动错误:\", error);\n    return { success: false, message: '在服务器上删除活动失败。请稍后重试。' };\n  }\n}\n\n\nexport async function joinEventAction(eventId: string, cdKeyInput: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: '您必须登录才能加入活动。' };\n  }\n  if (user.ban === 1) {\n     return { success: false, message: '您的账户已被封禁，无法加入活动。' };\n  }\n  try {\n    const result = await apiJoinEvent(user.id, eventId, cdKeyInput); \n    return result;\n  } catch (error) {\n    console.error(\"加入活动错误:\", error);\n    return { success: false, message: '加入活动时发生服务器错误。' };\n  }\n}\n\nexport async function joinEventUsingCdKeyOnlyAction(cdKey: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: '您必须登录才能加入活动。' };\n  }\n   if (user.ban === 1) {\n     return { success: false, message: '您的账户已被封禁，无法加入活动。' };\n  }\n\n  if (!cdKey || cdKey.trim() === '') {\n    return { success: false, message: '请输入有效的活动代码。' };\n  }\n\n  const eventToJoin = await getEventByCdKey(cdKey); \n  if (!eventToJoin) {\n    return { success: false, message: '具有此活动代码的活动未找到。' };\n  }\n\n  try {\n    const result = await apiJoinEvent(user.id, eventToJoin.id, cdKey); \n    return result;\n  } catch (error) {\n    console.error(\"使用活动代码加入活动错误:\", error);\n    return { success: false, message: '使用活动代码加入活动时发生服务器错误。' };\n  }\n}\n\n\nexport async function leaveEventAction(eventId: string) {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: '您必须登录才能离开活动。' };\n  }\n  try {\n    const result = await apiLeaveEvent(user.id, eventId); \n    return result;\n  } catch (error) {\n    console.error(\"离开活动错误:\", error);\n    return { success: false, message: '离开活动时发生服务器错误。' };\n  }\n}\n\nexport async function checkInAction(eventId: string): Promise<{ success: boolean, message: string }> {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: '您必须登录才能签到。' };\n  }\n   if (user.ban === 1) {\n     return { success: false, message: '您的账户已被封禁，无法签到。' };\n  }\n  try {\n    const result = await apiCheckInUser(user.id, eventId); \n    return result;\n  } catch (error) {\n    console.error(\"签到错误:\", error);\n    return { success: false, message: '签到过程中发生服务器错误。' };\n  }\n}\n\nexport async function getEventDetailsAction(eventId: string): Promise<Event | null> {\n  try {\n    const event = await getEventById(eventId); \n    return event || null;\n  } catch (error) {\n    console.error(\"获取活动详情错误 (action):\", error);\n    return null;\n  }\n}\n\nexport async function getEventsAction(): Promise<Event[]> {\n  try {\n    return await apiGetEvents(); \n  } catch (error) {\n    console.error(\"获取所有活动失败 (action):\", error);\n    return [];\n  }\n}\n\nexport async function getUserProfile(userId: string): Promise<{ user: User; joinedEvents: Event[] } | null> {\n  try {\n    const user = await getUserById(userId);\n    if (!user) {\n      console.warn(`用户个人资料未找到: ${userId}`);\n      return null;\n    }\n    const joinedEvents = await getEventsForUser(userId);\n    return { user, joinedEvents };\n  } catch (error) {\n    console.error(`获取用户 ${userId} 个人资料错误:`, error);\n    return null;\n  }\n}\n\n\nexport async function getAnnouncementsAction(): Promise<Announcement[]> {\n  try {\n    return await apiGetAnnouncements(); \n  } catch (error) {\n    console.error(\"获取公告失败 (action):\", error);\n    return [];\n  }\n}\n\n// --- User Management Actions (Admin/Co-Admin) ---\nexport async function getUsersAction(): Promise<User[]> {\n  const currentUser = await getSessionUser();\n  if (!currentUser || (currentUser.op !== 1 && currentUser.op !== 2)) {\n    console.warn(\"非管理员/协管员尝试获取用户列表。\");\n    return [];\n  }\n  return apiGetUsers();\n}\n\nconst AdminAddUserFormSchema = z.object({\n  minecraftUsername: MinecraftUsernameSchema,\n  avatarUrl: z.string().url(\"无效的头像链接。\").optional().or(z.literal('')),\n  op: z.enum(['0', '1', '2']).transform(Number),\n  password: z.string().min(6, \"密码至少需要6个字符。\"),\n  confirmPassword: z.string(),\n  ban: z.enum(['0', '1']).transform(Number).default(0),\n  adminConfirmPassword: z.string().min(1, \"需要您的密码来确认此操作。\")\n}).refine(data => data.password === data.confirmPassword, {\n  message: \"两次输入的密码不匹配。\",\n  path: [\"confirmPassword\"],\n});\n\n\nexport async function adminAddUserAction(prevState: AdminAddUserFormState, formData: FormData): Promise<AdminAddUserFormState> {\n  try {\n    const performingUser = await getSessionUser();\n    if (!performingUser || (performingUser.op !== 1 && performingUser.op !== 2)) {\n      return { message: \"您没有权限执行此操作。\", success: false, errors: { form: [\"权限不足。\"] } };\n    }\n\n    const rawFormData = Object.fromEntries(formData.entries());\n    const validatedFields = AdminAddUserFormSchema.safeParse(rawFormData);\n\n    if (!validatedFields.success) {\n      return {\n        message: '输入无效。请检查您填写的信息。',\n        errors: validatedFields.error.flatten().fieldErrors,\n        success: false,\n      };\n    }\n\n    let { minecraftUsername, avatarUrl, op, password, ban, adminConfirmPassword } = validatedFields.data;\n\n    if (performingUser.password !== adminConfirmPassword) {\n        return { message: '您的账户密码不正确，无法授权此操作。', errors: { adminConfirmPassword: ['管理员密码不正确。'] }, success: false };\n    }\n    \n    if (performingUser.op === 2) { \n      if (op === 1) { \n        return { message: '协管员无权创建管理员账户。', errors: { op: ['协管员无权创建管理员账户。'] }, success: false };\n      }\n      op = 0; \n    }\n    \n    const isNameMCValid = await checkNameMC(minecraftUsername);\n    if (!isNameMCValid) {\n      return { message: '此 Minecraft 用户名在 NameMC 上无效或无法验证。', errors: { minecraftUsername: ['此 Minecraft 用户名在 NameMC 上无效或无法验证。'] }, success: false };\n    }\n\n    const existingUserByUsername = await getUserByUsername(minecraftUsername);\n    if (existingUserByUsername) {\n      return { message: '此 Minecraft 用户名已被注册。', errors: { minecraftUsername: ['此 Minecraft 用户名已被注册。'] }, success: false };\n    }\n    \n    await apiCreateUser({\n      id: minecraftUsername,\n      username: minecraftUsername,\n      avatarUrl: avatarUrl || `https://placehold.co/100x100.png?text=${minecraftUsername.substring(0,2).toUpperCase()}`,\n      op: op,\n      password: password,\n      ban: ban, \n    });\n\n    return { message: `用户 ${minecraftUsername} 已成功创建。`, success: true };\n\n  } catch (error: any) {\n    console.error(\"Admin Add User Action - Server Error:\", error);\n    return { message: '创建用户时发生服务器内部错误。', success: false, errors: { form: ['创建用户时发生服务器内部错误。'] } };\n  }\n}\n\n\nconst AdminUpdateUserFormSchema = z.object({\n  userIdToUpdate: z.string().min(1, \"用户ID是必需的。\"),\n  minecraftUsername: MinecraftUsernameSchema,\n  avatarUrl: z.string().url(\"无效的头像链接。\").optional().or(z.literal('')),\n  op: z.enum(['0', '1', '2']).transform(Number),\n  newPassword: z.string().min(6, \"新密码至少需要6个字符。\").optional().or(z.literal('')),\n  confirmNewPassword: z.string().optional().or(z.literal('')),\n  ban: z.enum(['0', '1']).transform(Number),\n  adminConfirmPassword: z.string().min(1, \"需要您的密码来确认更改。\") \n}).refine(data => {\n  if (data.newPassword && data.newPassword !== data.confirmNewPassword) {\n    return false;\n  }\n  return true;\n}, {\n  message: \"两次输入的新密码不匹配。\",\n  path: [\"confirmNewPassword\"],\n});\n\n\nexport async function adminUpdateUserAction(prevState: AdminUpdateUserFormState, formData: FormData): Promise<AdminUpdateUserFormState> {\n   try {\n    const performingUser = await getSessionUser();\n    if (!performingUser || (performingUser.op !== 1 && performingUser.op !== 2)) {\n      return { message: \"您没有权限执行此操作。\", success: false, errors: { form: [\"权限不足。\"] } };\n    }\n\n    const rawFormData = Object.fromEntries(formData.entries());\n    const validatedFields = AdminUpdateUserFormSchema.safeParse(rawFormData);\n\n    if (!validatedFields.success) {\n      return {\n        message: '输入无效。请检查您填写的信息。',\n        errors: validatedFields.error.flatten().fieldErrors,\n        success: false,\n      };\n    }\n    \n    let { userIdToUpdate, minecraftUsername, avatarUrl, op, newPassword, ban, adminConfirmPassword } = validatedFields.data;\n\n    if (performingUser.password !== adminConfirmPassword) { \n        return { message: '您的账户密码不正确，无法授权此更改。', errors: { adminConfirmPassword: ['管理员密码不正确。'] }, success: false };\n    }\n\n    const userToUpdate = await getUserById(userIdToUpdate);\n    if (!userToUpdate) {\n      return { message: '要更新的用户未找到。', errors: { userIdToUpdate: ['用户未找到。'] }, success: false };\n    }\n    \n    const updateData: Partial<User> = {\n      username: minecraftUsername,\n      avatarUrl: avatarUrl || userToUpdate.avatarUrl,\n      ban: ban,\n    };\n    \n    if (performingUser.op === 2) { \n      if (userToUpdate.op === 1) { \n        return { message: '协管员无权编辑管理员账户。', errors: { form: ['协管员无权编辑管理员账户。'] }, success: false };\n      }\n      updateData.op = userToUpdate.op; \n    } else if (performingUser.op === 1) { \n       if (performingUser.id === userIdToUpdate && op !== 1) {\n         return { message: '管理员不能将自己降级为非管理员。', errors: { op: ['管理员不能将自己降级。'] }, success: false };\n       }\n      updateData.op = op;\n    }\n\n\n    if (minecraftUsername.toLowerCase() !== userToUpdate.username.toLowerCase()) {\n      const existingUserWithNewName = await getUserByUsername(minecraftUsername);\n      if (existingUserWithNewName && existingUserWithNewName.id !== userIdToUpdate) {\n        return { message: '此 Minecraft 用户名已被其他用户注册。', errors: { minecraftUsername: ['此 Minecraft 用户名已被其他用户注册。'] }, success: false };\n      }\n      const isNameMCValid = await checkNameMC(minecraftUsername);\n      if (!isNameMCValid) {\n        return { message: '新的 Minecraft 用户名在 NameMC 上无效或无法验证。', errors: { minecraftUsername: ['新的 Minecraft 用户名在 NameMC 上无效或无法验证。'] }, success: false };\n      }\n    }\n    \n    if (newPassword) {\n      updateData.password = newPassword; \n    }\n\n    await apiUpdateUserById(userIdToUpdate, updateData);\n\n    return { message: `用户 ${minecraftUsername} (ID: ${userIdToUpdate}) 已成功更新。`, success: true };\n\n  } catch (error: any) {\n    console.error(\"Admin Update User Action - Server Error:\", error);\n    return { message: '更新用户时发生服务器内部错误。', success: false, errors: { form: ['更新用户时发生服务器内部错误。'] } };\n  }\n}\n\nexport async function adminDeleteUserAction(userIdToDelete: string, adminConfirmPassword: string): Promise<{ success: boolean; message: string }> {\n  const performingUser = await getSessionUser();\n  if (!performingUser || (performingUser.op !== 1 && performingUser.op !== 2)) {\n    return { success: false, message: \"您没有权限执行此操作。\" };\n  }\n  if (performingUser.id === userIdToDelete) {\n    return { success: false, message: \"您不能删除自己的账户。\" };\n  }\n  if (performingUser.password !== adminConfirmPassword) {\n    return { success: false, message: \"您的账户密码不正确，无法授权删除操作。\" };\n  }\n\n  const userToDelete = await getUserById(userIdToDelete);\n  if (!userToDelete) {\n      return { success: false, message: `用户 ${userIdToDelete} 未找到。` };\n  }\n\n  if (performingUser.op === 2 && userToDelete.op === 1) { \n      return { success: false, message: \"协管员无权删除管理员账户。\" };\n  }\n  \n  if (userToDelete.op === 1) { \n    const allUsers = await apiGetUsers();\n    const adminCount = allUsers.filter(u => u.op === 1).length;\n    if (adminCount <= 1) {\n      return { success: false, message: \"无法删除最后一个管理员账户。\" };\n    }\n  }\n\n  try {\n    const result = await apiDeleteUserById(userIdToDelete);\n    return result;\n  } catch (error) {\n    console.error(\"Admin Delete User Action - Server Error:\", error);\n    const errorMessage = error instanceof Error ? error.message : \"删除用户时发生服务器内部错误。\";\n    return { success: false, message: errorMessage };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1844, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1952, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/events/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/events/[id]/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/events/[id]/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 1966, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/events/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/events/[id]/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/events/[id]/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}