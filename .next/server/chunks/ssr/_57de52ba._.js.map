{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import type { Event, User, Participant, EventStatus } from './types';\nimport { addDays, isPast, isFuture, isEqual, parseISO } from 'date-fns';\n\n// Mock Users\nconst mockUsers: User[] = [\n  { id: 'user1', username: 'Steve', avatarUrl: 'https://picsum.photos/100/100?random=1', joinedEventIds: ['event1', 'event2'] },\n  { id: 'user2', username: 'Alex', avatarUrl: 'https://picsum.photos/100/100?random=2', joinedEventIds: ['event2'] },\n  { id: 'user3', username: 'Notch', avatarUrl: 'https://picsum.photos/100/100?random=3', joinedEventIds: [] },\n];\n\n// Mock Events\nconst mockEvents: Event[] = [\n  {\n    id: 'event1',\n    name: 'Survival Games Championship',\n    date: addDays(new Date(), 7).toISOString(), // Upcoming\n    description: `\n### Welcome to the Annual Survival Games!\nProve your mettle in a fight to be the last one standing.\n**Rules:**\n- No cheating\n- Alliances are temporary\n- Have fun!\n**Prizes:**\n- 1st Place: Diamond Trophy\n- 2nd Place: Gold Ingots\n- 3rd Place: Iron Tools\n`,\n    participantLimit: 24,\n    participants: [\n      { ...mockUsers[0], isCheckedIn: false },\n    ],\n    cdKey: 'SURVIVAL2024',\n    imageUrl: 'https://picsum.photos/600/400?random=10',\n    organizerId: 'adminUser',\n  },\n  {\n    id: 'event2',\n    name: 'Creative Build-Off',\n    date: new Date().toISOString(), // Current\n    description: `\n## Show Us Your Building Skills!\nTheme: **Medieval Castles**\nBuild the most impressive castle within the time limit.\nJudged on:\n- Creativity\n- Detail\n- Scale\n`,\n    participantLimit: 50,\n    participants: [\n      { ...mockUsers[0], isCheckedIn: true },\n      { ...mockUsers[1], isCheckedIn: false },\n    ],\n    cdKey: 'BUILDMC2024',\n    imageUrl: 'https://picsum.photos/600/400?random=11',\n    organizerId: 'adminUser',\n  },\n  {\n    id: 'event3',\n    name: 'Parkour Challenge',\n    date: addDays(new Date(), -14).toISOString(), // Past\n    description: 'Test your agility in our toughest parkour map yet. Rewards for completion!',\n    participants: [],\n    cdKey: 'PARKOURX',\n    imageUrl: 'https://picsum.photos/600/400?random=12',\n    organizerId: 'adminUser',\n  },\n  {\n    id: 'event4',\n    name: 'Redstone Contraption Fair',\n    date: addDays(new Date(), 30).toISOString(), // Upcoming\n    description: 'Showcase your most ingenious redstone inventions. Innovation is key!',\n    participantLimit: 10,\n    participants: [],\n    cdKey: 'REDSTONEFAI',\n    imageUrl: 'https://picsum.photos/600/400?random=13',\n    organizerId: 'adminUser',\n  },\n];\n\n// --- Event Functions ---\nexport async function getEvents(): Promise<Event[]> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  return JSON.parse(JSON.stringify(mockEvents)); // Deep copy to prevent mutation issues\n}\n\nexport async function getEventById(id: string): Promise<Event | undefined> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === id);\n  return event ? JSON.parse(JSON.stringify(event)) : undefined;\n}\n\nexport function getEventStatus(eventDate: string): EventStatus {\n  const date = parseISO(eventDate);\n  const today = new Date();\n  \n  // Consider an event \"current\" if it's today.\n  // For simplicity, we'll define \"today\" as the same calendar date.\n  // A more robust solution might involve start and end times.\n  if (isEqual(new Date(date.toDateString()), new Date(today.toDateString()))) {\n    return 'current';\n  }\n  if (isPast(date) && !isEqual(new Date(date.toDateString()), new Date(today.toDateString()))) {\n    return 'past';\n  }\n  if (isFuture(date)) {\n    return 'upcoming';\n  }\n  return 'current'; // Fallback, though should be covered\n}\n\nexport async function createEvent(eventData: Omit<Event, 'id' | 'participants' | 'organizerId'>, organizerId: string): Promise<Event> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  const newEvent: Event = {\n    ...eventData,\n    id: `event${mockEvents.length + 1}`,\n    participants: [],\n    organizerId,\n  };\n  mockEvents.push(newEvent);\n  return JSON.parse(JSON.stringify(newEvent));\n}\n\nexport async function joinEvent(userId: string, eventId: string, cdKey: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === eventId);\n  const user = mockUsers.find(u => u.id === userId);\n\n  if (!event) return { success: false, message: 'Event not found.' };\n  if (!user) return { success: false, message: 'User not found.' };\n  if (event.cdKey !== cdKey) return { success: false, message: 'Invalid CD-Key.' };\n  if (event.participantLimit && event.participants.length >= event.participantLimit) {\n    return { success: false, message: 'Event is full.' };\n  }\n  if (event.participants.some(p => p.id === userId)) {\n    return { success: false, message: 'Already joined this event.', event };\n  }\n\n  const participant: Participant = { ...user, isCheckedIn: false };\n  event.participants.push(participant);\n  user.joinedEventIds = [...(user.joinedEventIds || []), eventId];\n  \n  return { success: true, message: 'Successfully joined event!', event: JSON.parse(JSON.stringify(event)) };\n}\n\nexport async function leaveEvent(userId: string, eventId: string): Promise<{ success: boolean, message: string, event?: Event }> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === eventId);\n  const user = mockUsers.find(u => u.id === userId);\n\n  if (!event) return { success: false, message: 'Event not found.' };\n  if (!user) return { success: false, message: 'User not found.' };\n\n  const participantIndex = event.participants.findIndex(p => p.id === userId);\n  if (participantIndex === -1) {\n    return { success: false, message: 'Not currently joined in this event.' };\n  }\n\n  event.participants.splice(participantIndex, 1);\n  user.joinedEventIds = (user.joinedEventIds || []).filter(id => id !== eventId);\n\n  return { success: true, message: 'Successfully left event.', event: JSON.parse(JSON.stringify(event)) };\n}\n\nexport async function checkInUser(userId: string, eventId: string): Promise<{ success: boolean, message: string }> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  const event = mockEvents.find(e => e.id === eventId);\n  if (!event) return { success: false, message: 'Event not found.' };\n\n  const participant = event.participants.find(p => p.id === userId);\n  if (!participant) return { success: false, message: 'You are not registered for this event.' };\n  if (participant.isCheckedIn) return { success: false, message: 'You are already checked in.' };\n  \n  const eventStatus = getEventStatus(event.date);\n  if (eventStatus !== 'current') {\n    return { success: false, message: 'Check-in is not available for this event yet or has passed.' };\n  }\n\n  participant.isCheckedIn = true;\n  return { success: true, message: 'Successfully checked in!' };\n}\n\n\n// --- User Functions ---\nexport async function getMockUserById(userId: string): Promise<User | undefined> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 200));\n  const user = mockUsers.find(u => u.id === userId);\n  return user ? JSON.parse(JSON.stringify(user)) : undefined;\n}\n\n// Mock function for Blessing Skin Server OAuth - returns a mock user\nexport async function mockOAuthLogin(username?: string, password?: string): Promise<User | null> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  // In a real scenario, you'd verify credentials with Blessing Skin Server\n  // For mock, just return 'Steve' if no specific user is requested, or find by username\n  if (username) {\n    const user = mockUsers.find(u => u.username.toLowerCase() === username.toLowerCase());\n    return user || null;\n  }\n  return mockUsers[0]; // Default to Steve\n}\n\nexport async function getUserProfile(userId: string): Promise<{ user: User; joinedEvents: Event[] } | null> {\n  await new Promise(resolve => setTimeout(resolve, 400));\n  const user = mockUsers.find(u => u.id === userId);\n  if (!user) return null;\n\n  const joinedEvents = mockEvents.filter(event => user.joinedEventIds?.includes(event.id));\n  return { user: JSON.parse(JSON.stringify(user)), joinedEvents: JSON.parse(JSON.stringify(joinedEvents)) };\n}\n\n// This would be stored in .env ideally\nexport const ADMIN_CREATE_EVENT_PASSWORD = \"supersecretpassword\";\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport {\n  mockOAuthLogin,\n  createEvent as apiCreateEvent,\n  joinEvent as apiJoinEvent,\n  leaveEvent as apiLeaveEvent,\n  checkInUser as apiCheckInUser,\n  ADMIN_CREATE_EVENT_PASSWORD,\n  getMockUserById,\n} from './data';\nimport type { Event } from './types';\n\nconst MAX_AGE = 60 * 60 * 24 * 30; // 30 days\n\n// --- Auth Actions ---\nexport async function login(prevState: any, formData: FormData) {\n  const email = formData.get('email') as string; // Using email field as username for Blessing Skin Server\n  const password = formData.get('password') as string;\n\n  // Basic validation\n  if (!email || !password) {\n    return { message: 'Username and password are required.' };\n  }\n\n  const user = await mockOAuthLogin(email, password);\n\n  if (user) {\n    cookies().set('userId', user.id, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: MAX_AGE,\n      path: '/',\n      sameSite: 'lax',\n    });\n    redirect('/profile');\n  } else {\n    return { message: 'Invalid username or password.' };\n  }\n}\n\nexport async function logout() {\n  cookies().delete('userId');\n  redirect('/login');\n}\n\nexport async function getSessionUser() {\n  const userId = cookies().get('userId')?.value;\n  if (!userId) return null;\n  try {\n    return await getMockUserById(userId);\n  } catch (error) {\n    console.error(\"Failed to get session user:\", error);\n    return null;\n  }\n}\n\n// --- Event Actions ---\nconst CreateEventSchema = z.object({\n  name: z.string().min(3, \"Event name must be at least 3 characters.\"),\n  date: z.string().refine((date) => !isNaN(Date.parse(date)), \"Invalid date format.\"),\n  description: z.string().min(10, \"Description must be at least 10 characters.\"),\n  participantLimit: z.preprocess(\n    (val) => (val === \"\" || val === null || val === undefined ? undefined : Number(val)),\n    z.number().int().positive().optional()\n  ),\n  cdKey: z.string().min(4, \"CD-Key must be at least 4 characters long.\").max(20),\n  imageUrl: z.string().url(\"Invalid image URL.\").optional().or(z.literal('')),\n  adminPassword: z.string().refine(pass => pass === ADMIN_CREATE_EVENT_PASSWORD, \"Invalid admin password.\")\n});\n\nexport async function createEventAction(prevState: any, formData: FormData) {\n  const rawFormData = Object.fromEntries(formData.entries());\n  const validatedFields = CreateEventSchema.safeParse(rawFormData);\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Failed to create event. Please check the fields.',\n    };\n  }\n  \n  const user = await getSessionUser();\n  if (!user) {\n    return { message: 'Authentication required.' };\n  }\n\n  try {\n    const { adminPassword, ...eventData } = validatedFields.data;\n    const newEvent = await apiCreateEvent(eventData as Omit<Event, 'id' | 'participants' | 'organizerId'>, user.id);\n    // revalidatePath('/events'); // If using on-demand revalidation\n    // revalidatePath('/');\n    redirect(`/events/${newEvent.id}`);\n  } catch (error) {\n    console.error(\"Create event error:\", error);\n    return { message: 'Failed to create event on the server.' };\n  }\n}\n\nexport async function joinEventAction(eventId: string, cdKey: string) {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: 'You must be logged in to join an event.' };\n  }\n  try {\n    const result = await apiJoinEvent(user.id, eventId, cdKey);\n    // revalidatePath(`/events/${eventId}`);\n    // revalidatePath('/profile');\n    return result;\n  } catch (error) {\n    return { success: false, message: 'An error occurred while joining the event.' };\n  }\n}\n\nexport async function leaveEventAction(eventId: string) {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: 'You must be logged in to leave an event.' };\n  }\n  try {\n    const result = await apiLeaveEvent(user.id, eventId);\n    // revalidatePath(`/events/${eventId}`);\n    // revalidatePath('/profile');\n    return result;\n  } catch (error) {\n    return { success: false, message: 'An error occurred while leaving the event.' };\n  }\n}\n\nexport async function checkInAction(eventId: string) {\n  const user = await getSessionUser();\n  if (!user) {\n    return { success: false, message: 'You must be logged in to check in.' };\n  }\n\n  // Placeholder for Geetest CAPTCHA verification\n  // const captchaToken = formData.get('geetestToken');\n  // const captchaVerified = await verifyGeetestToken(captchaToken);\n  // if (!captchaVerified) return { success: false, message: 'CAPTCHA verification failed.'};\n\n  try {\n    const result = await apiCheckInUser(user.id, eventId);\n    // revalidatePath(`/events/${eventId}`);\n    return result;\n  } catch (error) {\n    return { success: false, message: 'An error occurred during check-in.' };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/events/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/events/[id]/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/events/[id]/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/events/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/events/[id]/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/events/[id]/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}